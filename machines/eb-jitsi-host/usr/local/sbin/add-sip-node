#!/bin/bash
set -e

# ------------------------------------------------------------------------------
# ADD-SIP-NODE
# ------------------------------------------------------------------------------
# Add an additional SIP (Jibri video SIP gateway) node to the cluster.
#
# Usage:
#     add-sip-node <NODE-ADDRESS>
# ------------------------------------------------------------------------------
NODE=$1
SSH_CONFIG=/root/.ssh/jms-config
INSTALLER=https://raw.githubusercontent.com/emrahcom/emrah-bullseye-base/main/installer/eb
INSTALLER_CONFIG=https://raw.githubusercontent.com/emrahcom/emrah-bullseye-templates/main/installer/eb-sip.conf
SIP_ROOTFS=/var/lib/lxc/eb-sip-template/rootfs
JITSI_ROOTFS=/var/lib/lxc/eb-jitsi/rootfs
JIBRI_ROOTFS=/var/lib/lxc/eb-jibri-template/rootfs
JIBRI_VERSION=$(cat $JITSI_ROOTFS/root/meta/jibri-version || true)
DEFAULT_ROUTE=$(ip route | egrep '^default ' | head -n1)
PUBLIC_INTERFACE=${DEFAULT_ROUTE##*dev }
PUBLIC_INTERFACE=${PUBLIC_INTERFACE/% */}
EXTERNAL_IP=$(dig -4 +short myip.opendns.com a @resolver1.opendns.com)

ssh_() {
    ssh -F $SSH_CONFIG $NODE -- "$@"
}

scp_() {
    scp -F $SSH_CONFIG $1 $NODE:$2
}


# ------------------------------------------------------------------------------
# trap on exit
# ------------------------------------------------------------------------------
function on_exit {
    if [[ "$COMPLETED" != true ]]; then
        cat <<EOF

Something went wrong. The installation couldn't be completed!
EOF
        exit 1
    else
        cat <<EOF

Completed successfully!
EOF
        exit 0
    fi
}

COMPLETED=false
trap on_exit EXIT

if [[ -z "$NODE" ]]; then
    cat <<EOF
Usage:
       add-sip-node <NODE-ADDRESS>
EOF
    exit 1
fi


# ------------------------------------------------------------------------------
# check
# ------------------------------------------------------------------------------
KERNEL=$(ssh_ uname -r)
ARCH=$(ssh_ dpkg --print-architecture)

ssh_ "modprobe snd_aloop 2>/dev/null || true"
if [ -z "$(ssh_ grep snd_aloop /proc/modules)" ]; then
    cat <<EOF

The node's kernel ($KERNEL) does not support snd_aloop module.

Please install the standard Linux kernel package to the node and reboot it.
Probably it's "linux-image-$ARCH" for your case.

EOF

exit 1
fi


# ------------------------------------------------------------------------------
# cluster related parameters
# ------------------------------------------------------------------------------
JITSI_FQDN=$(egrep '\s*xmpp-domain\s*=' \
    $JIBRI_ROOTFS/etc/jitsi/jibri/jibri.conf | cut -d'"' -f2 | xargs)
PASSWD1=$(sed -n '/\s*control-login\s*{/,/}/p' \
    $JIBRI_ROOTFS/etc/jitsi/jibri/jibri.conf | egrep '\s*password\s*=' | \
    cut -d'"' -f2 | xargs)
PASSWD2=$(sed -n '/\s*call-login\s*{/,/}/p' \
    $JIBRI_ROOTFS/etc/jitsi/jibri/jibri.conf | egrep '\s*password\s*=' | \
    cut -d'"' -f2 | xargs)


# ------------------------------------------------------------------------------
# installation
# ------------------------------------------------------------------------------
ssh_ apt-get -y --allow-releaseinfo-change update
ssh_ apt-get -y install wget
ssh_ wget $INSTALLER -O /tmp/eb -T 30
ssh_ wget $INSTALLER_CONFIG -O /tmp/eb-sip.conf -T 30

ssh_ "echo export JITSI_FQDN=$JITSI_FQDN >>/tmp/eb-sip.conf"
ssh_ "echo export JIBRI_VERSION=$JIBRI_VERSION >>/tmp/eb-sip.conf"
ssh_ "cd /tmp && bash eb eb-sip"


# ------------------------------------------------------------------------------
# configuration
# ------------------------------------------------------------------------------
[[ -n "$(ssh_ dig +short $JITSI_FQDN)" ]] || \
    ssh_ "echo \"$EXTERNAL_IP $JITSI_FQDN\" >> $SIP_ROOTFS/etc/hosts"

scp_ $JITSI_ROOTFS/usr/local/share/ca-certificates/jms-CA.crt \
    $SIP_ROOTFS/usr/local/share/ca-certificates/
ssh_ sed -i \"s/___JITSI_FQDN___/$JITSI_FQDN/\" \
    $SIP_ROOTFS/etc/jitsi/jibri/jibri.conf
ssh_ sed -i \"s/___PASSWD1___/$PASSWD1/\" \
    $SIP_ROOTFS/etc/jitsi/jibri/jibri.conf
ssh_ sed -i \"s/___PASSWD2___/$PASSWD2/\" \
    $SIP_ROOTFS/etc/jitsi/jibri/jibri.conf

ssh_ systemctl stop sip-ephemeral-container.service
ssh_ lxc-start -n eb-sip-template
ssh_ lxc-wait -n eb-sip-template -s RUNNING
for i in $(seq 0 9); do
    ssh_ "lxc-attach -n eb-sip-template -- ping -c1 host.loc" && break || true
    sleep 1
done

ssh_ "lxc-attach -n eb-sip-template -- update-ca-certificates"
ssh_ "lxc-attach -n eb-sip-template -- zsh -c \" \
    set -e
    certutil -A -n 'jitsi' -i /usr/local/share/ca-certificates/jms-CA.crt \
        -t 'TCu,Cu,Tu' -d sql:/home/jibri/.pki/nssdb/
    chown jibri:jibri /home/jibri/.pki -R\""

ssh_ lxc-stop -n eb-sip-template
ssh_ lxc-wait -n eb-sip-template -s STOPPED
ssh_ systemctl start sip-ephemeral-container.service


# ------------------------------------------------------------------------------
# completed
# ------------------------------------------------------------------------------
COMPLETED=true
